<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.old.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.old.model.Goods" >
    <id column="GoodsId" property="goodsid" jdbcType="VARCHAR" />
    <result column="GoodsName" property="goodsname" jdbcType="VARCHAR" />
    <result column="Description" property="description" jdbcType="VARCHAR" />
    <result column="UserId" property="userid" jdbcType="VARCHAR" />
    <result column="Price" property="price" jdbcType="INTEGER" />
    <result column="ReateDate" property="reatedate" jdbcType="DATE" />
    <result column="GoodsType" property="goodstype" jdbcType="VARCHAR" />
    <result column="Bargain" property="bargain" jdbcType="INTEGER" />
    <result column="Old" property="old" jdbcType="VARCHAR" />
    <result column="InDate" property="indate" jdbcType="INTEGER" />
    <result column="Status" property="status" jdbcType="VARCHAR" />
    <result column="PublishTimes" property="publishtimes" jdbcType="INTEGER" />
    <result column="SeeTimes" property="seetimes" jdbcType="INTEGER" />
    <result column="GoodsChildType" property="goodschildtype" jdbcType="VARCHAR" />
    <result column="Place" property="place" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    GoodsId, GoodsName, Description, UserId, Price, ReateDate, GoodsType, Bargain, Old, 
    InDate, Status, PublishTimes, SeeTimes, GoodsChildType, Place
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where GoodsId = #{goodsid,jdbcType=VARCHAR}
  </select>
  <select id="searchGoods" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from goods
    where (GoodsName like  CONCAT(CONCAT('%', #{goodsname}), '%') or GoodsChildType=#{goodschildtype,jdbcType=VARCHAR}) and Status= #{status,jdbcType=VARCHAR}
    LIMIT #{startPage}, #{pageSize}
  </select>
  <select id="selectByUser" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where Status= #{status,jdbcType=VARCHAR} and UserId=#{userid,jdbcType=VARCHAR}
  </select>
   <select id="selectByUserId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where Status= #{status,jdbcType=VARCHAR} and UserId=#{userid,jdbcType=VARCHAR}
    LIMIT #{startPage}, #{pageSize}
  </select>
  <select id="selectByGoodsType" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where Status= #{status,jdbcType=VARCHAR} and GoodsType=#{goodstype,jdbcType=VARCHAR}
    LIMIT #{startPage}, #{pageSize}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from goods
    where GoodsId = #{goodsid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.old.model.Goods" >
    insert into goods (GoodsId, GoodsName, Description, 
      UserId, Price, ReateDate, 
      GoodsType, Bargain, Old, 
      InDate, Status, PublishTimes, 
      SeeTimes, GoodsChildType, Place
      )
    values (#{goodsid,jdbcType=VARCHAR}, #{goodsname,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{userid,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{reatedate,jdbcType=DATE}, 
      #{goodstype,jdbcType=VARCHAR}, #{bargain,jdbcType=INTEGER}, #{old,jdbcType=VARCHAR}, 
      #{indate,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{publishtimes,jdbcType=INTEGER}, 
      #{seetimes,jdbcType=INTEGER}, #{goodschildtype,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.old.model.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsid != null" >
        GoodsId,
      </if>
      <if test="goodsname != null" >
        GoodsName,
      </if>
      <if test="description != null" >
        Description,
      </if>
      <if test="userid != null" >
        UserId,
      </if>
      <if test="price != null" >
        Price,
      </if>
      <if test="reatedate != null" >
        ReateDate,
      </if>
      <if test="goodstype != null" >
        GoodsType,
      </if>
      <if test="bargain != null" >
        Bargain,
      </if>
      <if test="old != null" >
        Old,
      </if>
      <if test="indate != null" >
        InDate,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="publishtimes != null" >
        PublishTimes,
      </if>
      <if test="seetimes != null" >
        SeeTimes,
      </if>
      <if test="goodschildtype != null" >
        GoodsChildType,
      </if>
      <if test="place != null" >
        Place,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsid != null" >
        #{goodsid,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null" >
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="reatedate != null" >
        #{reatedate,jdbcType=DATE},
      </if>
      <if test="goodstype != null" >
        #{goodstype,jdbcType=VARCHAR},
      </if>
      <if test="bargain != null" >
        #{bargain,jdbcType=INTEGER},
      </if>
      <if test="old != null" >
        #{old,jdbcType=VARCHAR},
      </if>
      <if test="indate != null" >
        #{indate,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="publishtimes != null" >
        #{publishtimes,jdbcType=INTEGER},
      </if>
      <if test="seetimes != null" >
        #{seetimes,jdbcType=INTEGER},
      </if>
      <if test="goodschildtype != null" >
        #{goodschildtype,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.old.model.Goods" >
    update goods
    <set >
      <if test="goodsname != null" >
        GoodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        Description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        UserId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        Price = #{price,jdbcType=INTEGER},
      </if>
      <if test="reatedate != null" >
        ReateDate = #{reatedate,jdbcType=DATE},
      </if>
      <if test="goodstype != null" >
        GoodsType = #{goodstype,jdbcType=VARCHAR},
      </if>
      <if test="bargain != null" >
        Bargain = #{bargain,jdbcType=INTEGER},
      </if>
      <if test="old != null" >
        Old = #{old,jdbcType=VARCHAR},
      </if>
      <if test="indate != null" >
        InDate = #{indate,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="publishtimes != null" >
        PublishTimes = #{publishtimes,jdbcType=INTEGER},
      </if>
      <if test="seetimes != null" >
        SeeTimes = #{seetimes,jdbcType=INTEGER},
      </if>
      <if test="goodschildtype != null" >
        GoodsChildType = #{goodschildtype,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        Place = #{place,jdbcType=VARCHAR},
      </if>
    </set>
    where GoodsId = #{goodsid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.old.model.Goods" >
    update goods
    set GoodsName = #{goodsname,jdbcType=VARCHAR},
      Description = #{description,jdbcType=VARCHAR},
      UserId = #{userid,jdbcType=VARCHAR},
      Price = #{price,jdbcType=INTEGER},
      ReateDate = #{reatedate,jdbcType=DATE},
      GoodsType = #{goodstype,jdbcType=VARCHAR},
      Bargain = #{bargain,jdbcType=INTEGER},
      Old = #{old,jdbcType=VARCHAR},
      InDate = #{indate,jdbcType=INTEGER},
      Status = #{status,jdbcType=VARCHAR},
      PublishTimes = #{publishtimes,jdbcType=INTEGER},
      SeeTimes = #{seetimes,jdbcType=INTEGER},
      GoodsChildType = #{goodschildtype,jdbcType=VARCHAR},
      Place = #{place,jdbcType=VARCHAR}
    where GoodsId = #{goodsid,jdbcType=VARCHAR}
  </update>
  <select id="allGoods" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where Status= #{status,jdbcType=VARCHAR}
  </select>
  <select id="findGoodsNumber" resultType="int" parameterType="java.lang.String" >
    select 
    count(goodsid)
    from goods
    where Status= #{status,jdbcType=VARCHAR}
  </select>
  <select id="searchGoodsNumber" resultType="int" parameterType="java.lang.String" >
    select 
    count(goodsid)
    from goods
    where (GoodsName like '%${goodsname}%' or GoodsChildType=#{goodschildtype,jdbcType=VARCHAR}) and Status= #{status,jdbcType=VARCHAR}
  </select>
   <select id="findGoodsNumberByUserId" resultType="int" parameterType="java.lang.String" >
    select 
    count(goodsid)
    from goods
    where Status= #{status,jdbcType=VARCHAR} and UserId=#{userid,jdbcType=VARCHAR}
  </select>
   <select id="findGoodsNumberByGoodsType" resultType="int" parameterType="java.lang.String" >
    select 
    count(goodsid)
    from goods
    where Status= #{status,jdbcType=VARCHAR} and GoodsType=#{goodstype,jdbcType=VARCHAR}
  </select>
    <select id="findGoodsByLImit" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from goods
    where Status= #{status,jdbcType=VARCHAR}
    LIMIT #{startPage}, #{pageSize}
  </select>
 
</mapper>