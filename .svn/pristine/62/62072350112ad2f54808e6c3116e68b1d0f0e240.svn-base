<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.old.dao.ChatmessageMapper" >
  <resultMap id="BaseResultMap" type="com.old.model.Chatmessage" >
    <id column="ChatId" property="chatid" jdbcType="VARCHAR" />
    <result column="UserId1" property="userid1" jdbcType="VARCHAR" />
    <result column="UserId2" property="userid2" jdbcType="VARCHAR" />
    <result column="Replymessage" property="replymessage" jdbcType="VARCHAR" />
    <result column="Sendtime" property="sendtime" jdbcType="TIMESTAMP" />
    <result column="Weathersee" property="weathersee" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ChatId, UserId1, UserId2, Replymessage, Sendtime, Weathersee
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from chatmessage
    where ChatId = #{chatid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from chatmessage
    where ChatId = #{chatid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.old.model.Chatmessage" >
    insert into chatmessage (ChatId, UserId1, UserId2, 
      Replymessage, Sendtime, Weathersee
      )
    values (#{chatid,jdbcType=VARCHAR}, #{userid1,jdbcType=VARCHAR}, #{userid2,jdbcType=VARCHAR}, 
      #{replymessage,jdbcType=VARCHAR}, #{sendtime,jdbcType=TIMESTAMP}, #{weathersee,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.old.model.Chatmessage" >
    insert into chatmessage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="chatid != null" >
        ChatId,
      </if>
      <if test="userid1 != null" >
        UserId1,
      </if>
      <if test="userid2 != null" >
        UserId2,
      </if>
      <if test="replymessage != null" >
        Replymessage,
      </if>
      <if test="sendtime != null" >
        Sendtime,
      </if>
      <if test="weathersee != null" >
        Weathersee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="chatid != null" >
        #{chatid,jdbcType=VARCHAR},
      </if>
      <if test="userid1 != null" >
        #{userid1,jdbcType=VARCHAR},
      </if>
      <if test="userid2 != null" >
        #{userid2,jdbcType=VARCHAR},
      </if>
      <if test="replymessage != null" >
        #{replymessage,jdbcType=VARCHAR},
      </if>
      <if test="sendtime != null" >
        #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="weathersee != null" >
        #{weathersee,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.old.model.Chatmessage" >
    update chatmessage
    <set >
      <if test="userid1 != null" >
        UserId1 = #{userid1,jdbcType=VARCHAR},
      </if>
      <if test="userid2 != null" >
        UserId2 = #{userid2,jdbcType=VARCHAR},
      </if>
      <if test="replymessage != null" >
        Replymessage = #{replymessage,jdbcType=VARCHAR},
      </if>
      <if test="sendtime != null" >
        Sendtime = #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="weathersee != null" >
        Weathersee = #{weathersee,jdbcType=INTEGER},
      </if>
    </set>
    where ChatId = #{chatid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.old.model.Chatmessage" >
    update chatmessage
    set UserId1 = #{userid1,jdbcType=VARCHAR},
      UserId2 = #{userid2,jdbcType=VARCHAR},
      Replymessage = #{replymessage,jdbcType=VARCHAR},
      Sendtime = #{sendtime,jdbcType=TIMESTAMP},
      Weathersee = #{weathersee,jdbcType=INTEGER}
    where ChatId = #{chatid,jdbcType=VARCHAR}
  </update>
</mapper>